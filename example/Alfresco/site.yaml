heat_template_version: '2014-10-16'

parameters:
  instance_site_id:
    type: number
  instance_site_name:
    type: string
  instance_account:
    type: string
  instance_number:
    type: number
    constraints:
      - range: {min: 1, max: 10}
  instance_keypair:
    type: string
    constraints:
      - custom_constraint: nova.keypair
  instance_flavor:
    type: string
    description:
      - allowed_values:
        - 4cores8GBmemory80GBdisk
    constraints:
      - custom_constraint: nova.flavor
  instance_image:
    type: string
    description:
      - allowed_values:
        - Alfresco
    constraints:
      - custom_constraint: glance.image
  instance_image_size:
    type: number
    constraints:
      - range:
          min: 10
  instance_public_network:
    type: string
    constraints:
      - custom_constraint: neutron.network
  instance_private_network:
    type: string
    constraints:
      - custom_constraint: neutron.network
  instance_type:
    type: string
    constraints:
      - allowed_values:
        - Gemini::Server::BootFromVolume
        - Gemini::Server::BootFromImage
  portal_ip:
    type: string
    constraints:
      - allowed_pattern: "([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])"
  alarm_enabled:
    type: boolean
  meter_name:
    type: string
    default: cpu_util
  alarm_statistic:
    type: string
    default: avg
  alarm_period:
    type: number
    default: 60
  alarm_evaluation_periods:
    type: number
    default: 1
  scale_max_size:
    type: number
    default: 3
  scaleup_threshold:
    type: number
    default: 60
  scaledown_threshold:
    type: number
    default: 20
  availability_zone:
    type: string
    default: nova

resources:
  instance_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name:
        str_replace:
          template: $site_id_$site_name_sg
          params:
            $site_id: {get_param: instance_site_id}
            $site_name: {get_param: instance_site_name}
      rules:
       - protocol: tcp
         port_range_max: 8080
         port_range_min: 8080
  set_hosts:
    type: OS::Heat::SoftwareConfig
    properties:
      config: {get_file: set_hosts.sh}
  instance_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
        - config: {get_resource: set_hosts}
  alfresco_group:
    type: OS::Heat::ResourceGroup
    properties:
      count: {get_param: instance_number}
      resource_def:
        type: {get_param: instance_type}
        properties:
          my_site_name: {get_param: instance_site_name}
          my_site_id: {get_param: instance_site_id}
          my_index: '%index%'
          my_account: {get_param: instance_account}
          my_keypair: {get_param: instance_keypair}
          my_flavor: {get_param: instance_flavor}
          my_image: {get_param: instance_image}
          my_image_size: {get_param: instance_image_size}
          my_public_network: {get_param: instance_public_network}
          my_private_network: {get_param: instance_private_network}
          my_security_group: {get_resource: instance_security_group}
          my_init: {get_resource: instance_init}
          my_availability_zone: {get_param: availability_zone}
          metadata: {"metering.stack": {get_param: 'OS::stack_id'}}

  autoscaling_group:
    type: OS::Heat::AutoScalingGroup
    properties:
      min_size: 0
      max_size: {get_param: scale_max_size}
      resource:
        type: {get_param: instance_type}
        properties:
          my_site_name: {get_param: instance_site_name}
          my_site_id: {get_param: instance_site_id}
          #TODO need to generate different index
          # or change the way of salt registration
          my_index: 65536
          my_account: {get_param: instance_account}
          my_keypair: {get_param: instance_keypair}
          my_flavor: {get_param: instance_flavor}
          my_image: {get_param: instance_image}
          my_image_size: {get_param: instance_image_size}
          my_public_network: {get_param: instance_public_network}
          my_private_network: {get_param: instance_private_network}
          my_security_group: {get_resource: instance_security_group}
          my_init: {get_resource: instance_init}
          my_availability_zone: {get_param: availability_zone}
          metadata: {"metering.stack": {get_param: 'OS::stack_id'}}

  scaleup_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: autoscaling_group}
      cooldown: 60
      scaling_adjustment: 1

  scaledown_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: autoscaling_group}
      cooldown: 60
      scaling_adjustment: -1

  alarm_high:
    type: OS::Ceilometer::Alarm
    properties:
      enabled: {get_param: alarm_enabled}
      meter_name: {get_param: meter_name}
      statistic: {get_param: alarm_statistic}
      period: {get_param: alarm_period}
      evaluation_periods: {get_param: alarm_evaluation_periods}
      threshold: {get_param: scaleup_threshold}
      alarm_actions:
        - {get_attr: [scaleup_policy, alarm_url]}
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: gt

  alarm_low:
    type: OS::Ceilometer::Alarm
    properties:
      enabled: {get_param: alarm_enabled}
      meter_name: {get_param: meter_name}
      statistic: {get_param: alarm_statistic}
      period: {get_param: alarm_period}
      evaluation_periods: {get_param: alarm_evaluation_periods}
      threshold: {get_param: scaledown_threshold}
      alarm_actions:
        - {get_attr: [scaledown_policy, alarm_url]}
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: lt

outputs:
  stack_des:
    value:
      - name: alfresco_group_info
        type: OS:Heat:Resource
        role: Alfresco
        number: {get_param: instance_number}
  alfresco_group_info:
    description: Group Info
    value: {get_attr: [alfresco_group, attributes, instance_info]}
  autoscaling_group_info:
    description: AS Group Info
    value: {get_attr: [autoscaling_group, outputs, instance_info]}
  scale_up_url:
    value: {get_attr: [scaleup_policy, alarm_url]}
  scale_down_url:
    value: {get_attr: [scaledown_policy, alarm_url]}
