heat_template_version: '2014-10-16'

parameters:
  instance_site_id:
    type: number
  instance_site_name:
    type: string
  account:
    type: string
    default: ubuntu
  account_pass:
    type: string
    default: 1qaz2wsx
  instance_number:
    type: number
    default: 1
    constraints:
      - range: {min: 1, max: 10}
  keypair:
    type: string
    constraints:
      - custom_constraint: nova.keypair
  flavor:
    type: string
    default: 2cores4GBmemory40GBdisk
    description:
      - allowed_values:
        - 2cores4GBmemory40GBdisk
        - 4cores8GBmemory80GBdisk
        - 8cores16GBmemory160GBdisk
    constraints:
      - custom_constraint: nova.flavor
  image:
    type: string
    default: Ubuntu14.04-2015.3.0
    description:
      - allowed_values:
        - Ubuntu14.04-2015.3.0
        - Windows7-2015.3.0-beta
    constraints:
      - custom_constraint: glance.image
  image_size:
    type: number
    constraints:
      - range:
          min: 15
  public_network:
    type: string
    default: net04_ext
    constraints:
      - custom_constraint: neutron.network
  private_network:
    type: string
    default: default_network
    constraints:
      - custom_constraint: neutron.network
  instance_type:
    type: string
    constraints:
      - allowed_values:
        - Gemini::Server::BootFromVolume
        - Gemini::Server::BootFromImage
  portal_ip:
    type: string
    constraints:
      - allowed_pattern: "([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])"
  alarm_enabled:
    type: boolean
  meter_name:
    type: string
    default: cpu_util
  alarm_statistic:
    type: string
    default: avg
  alarm_period:
    type: number
    default: 60
  evaluation_periods:
    type: number
    default: 1
  scale_max_size:
    type: number
    default: 3
  scaleup_threshold:
    type: number
    default: 60
  scaledown_threshold:
    type: number
    default: 20
  availability_zone:
    type: string
    default: nova

resources:
  enable_salt:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          template: {get_file: enable_salt.sh}
          params:
            $PORTAL_IP: {get_param: portal_ip}
  instance_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
        - config: {get_resource: enable_salt}
  instance_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name:
        str_replace:
          template: $site_id_$site_name_sg
          params:
            $site_id: {get_param: instance_site_id}
            $site_name: {get_param: instance_site_name}
      rules:
        - protocol: tcp # SSH
          port_range_max: 22
          port_range_min: 22
        - protocol: tcp # HTTP
          port_range_max: 80
          port_range_min: 80
        - protocol: tcp # HTTPS
          port_range_max: 443
          port_range_min: 443
        - protocol: tcp # RDP
          port_range_max: 3389
          port_range_min: 3389
        - protocol: tcp # SaltStack
          port_range_max: 4506
          port_range_min: 4505
        - protocol: tcp # Logstash
          port_range_max: 5672
          port_range_min: 5672
        - protocol: tcp # iperf
          port_range_max: 5001
          port_range_min: 5001
        - protocol: ICMP
  iaas_group:
    type: OS::Heat::ResourceGroup
    properties:
      count: {get_param: instance_number}
      resource_def:
        type: {get_param: instance_type}
        properties:
          my_site_name: {get_param: instance_site_name}
          my_site_id: {get_param: instance_site_id}
          my_index: '%index%'
          my_account: {get_param: account}
          my_keypair: {get_param: keypair}
          my_flavor: {get_param: flavor}
          my_image: {get_param: image}
          my_image_size: {get_param: image_size}
          my_public_network: {get_param: public_network}
          my_private_network: {get_param: private_network}
          my_security_group: {get_resource: instance_security_group}
          my_init: {get_resource: instance_init}
          my_availability_zone: {get_param: availability_zone}
          metadata: {"metering.stack": {get_param: 'OS::stack_id'}}

outputs:
  stack_des:
    value:
      - name: iaas_group_info
        type: OS:Heat:Resource
        role: IaaS
        number: {get_param: instance_number}
  iaas_group_info:
    description: Group Info
    value: {get_attr: [iaas_group, attributes, instance_info]}
