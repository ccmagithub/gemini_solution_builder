heat_template_version: '2014-10-16'

parameters:
  keypair:
    type: string
    constraints:
      - custom_constraint: nova.keypair
  goc_portal_ip:
    type: string
    default: '10.113.2.121'
  goc_portal_tenant_id:
    type: number
    default: 2
  goc_portal_tenant_admin_api_token:
    type: string
    default: 'fcae06c93fddb7a33d33428130ce1aac04cf1d32'
  goc_portal_tenant_name:
    type: string
    default: 'robert201630'
  goc_portal_tenant_admin_username:
    type: string
    default: 'robert201630_ta@gemini.com'
  goc_portal_tenant_admin_openstack_user_id:
    type: string
    default: '87f0ddd4874740ff9a513620171110fd'
  openstack_auth_url:
    type: string
    default: 'http://10.113.1.2:5000/v2.0'
  sportal_admin_account:
    type: string
    default: 'admin'
  sportal_admin_group_name:
    type: string
    default: 'gemini'
  sportal_admin_password:
    type: string
    default: 'password'
  sportal_admin_email:
    type: string
    default: 'admin@gemini'

resources:
  service_portal_instance:
    type: OS::Nova::Server
    properties:
      flavor: '2cores4GBmemory40GBdisk'
      networks:
        - network: 'default_network'
      image: 'ServicePortal'
      key_name: {get_param: keypair}
      security_groups: [{ get_resource: service_portal_sg }]
      availability_zone: 'nova'
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            sed -i '/portal_ip/ c\portal_ip = "$GOC_PORTAL_IP"' /usr/share/sportal/sportal/configs.py
            sed -i '/tenant_id/ c\tenant_id = "$GOC_PORTAL_TENANT_ID"' /usr/share/sportal/sportal/configs.py
            sed -i '/tenant_admin_token/ c\tenant_admin_token = "$GOC_PORTAL_TENANT_ADMIN_API_TOKEN"' /usr/share/sportal/sportal/configs.py
            sed -i '/tenant_name/ c\tenant_name = "$GOC_PORTAL_TENANT_NAME"' /usr/share/sportal/sportal/configs.py
            sed -i '/tenant_admin_username/ c\tenant_admin_username = "$GOC_PORTAL_TENANT_ADMIN_USERNAME"' /usr/share/sportal/sportal/configs.py
            sed -i '/tenant_admin_openstack_user_id/ c\tenant_admin_openstack_user_id = "$GOC_PORTAL_TENANT_ADMIN_OPENSTACK_USER_ID"' /usr/share/sportal/sportal/configs.py
            sed -i '/openstack_auth_url/ c\openstack_auth_url = "$OPENSTACK_AUTH_URL"' /usr/share/sportal/sportal/configs.py
            sed -i '/ADMIN_ACCOUNT/ c\ADMIN_ACCOUNT = "$SPORTAL_ADMIN_ACCOUNT"' /usr/share/sportal/sportal/settings.py
            sed -i '/ADMIN_GROUP_NAME/ c\ADMIN_GROUP_NAME = "$SPORTAL_ADMIN_GROUP_NAME"' /usr/share/sportal/sportal/settings.py
            sed -i '/\<ADMIN_PASSWORD\>/ c\ADMIN_PASSWORD = "$SPORTAL_ADMIN_PASSWORD"' /usr/share/sportal/sportal/settings.py
            sed -i '/ADMIN_EMAIL/ c\ADMIN_EMAIL = "$SPORTAL_ADMIN_EMAIL"' /usr/share/sportal/sportal/settings.py
            sed -i '/\<ADMIN_USER_NAME\>/ c\ADMIN_USER_NAME = "$SPORTAL_ADMIN_ACCOUNT@$SPORTAL_ADMIN_GROUP_NAME"' /usr/share/sportal/sportal/settings.py
            cd /usr/share/sportal
            python init.py
          params:
            $GOC_PORTAL_IP: { get_param: goc_portal_ip }
            $GOC_PORTAL_TENANT_ID: { get_param: goc_portal_tenant_id }
            $GOC_PORTAL_TENANT_ADMIN_API_TOKEN: { get_param: goc_portal_tenant_admin_api_token }
            $GOC_PORTAL_TENANT_NAME: { get_param: goc_portal_tenant_name }
            $GOC_PORTAL_TENANT_ADMIN_USERNAME: { get_param: goc_portal_tenant_admin_username }
            $GOC_PORTAL_TENANT_ADMIN_OPENSTACK_USER_ID: { get_param: goc_portal_tenant_admin_openstack_user_id }
            $OPENSTACK_AUTH_URL: { get_param: openstack_auth_url }
            $SPORTAL_ADMIN_ACCOUNT: { get_param: sportal_admin_account }
            $SPORTAL_ADMIN_GROUP_NAME: { get_param: sportal_admin_group_name }
            $SPORTAL_ADMIN_PASSWORD: { get_param: sportal_admin_password }
            $SPORTAL_ADMIN_EMAIL: { get_param: sportal_admin_email }
  service_portal_ip_association:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: {get_resource: service_portal_floating_ip}
      server_id: {get_resource: service_portal_instance}
  service_portal_floating_ip:
    type: OS::Nova::FloatingIP
    properties:
      pool: 'net04_ext'
  service_portal_sg:
    type: OS::Neutron::SecurityGroup
    properties:
      description: firewall rules for Service Portal. 4505/4506 for salt.
      name:
        str_replace:
          template: $stack_name_service_portal_sg
          params:
            $stack_name: {get_param: "OS::stack_name"}
      rules: [
        {remote_ip_prefix: 0.0.0.0/0, protocol: tcp, port_range_min: 22, port_range_max: 22},
        {remote_ip_prefix: 0.0.0.0/0, protocol: tcp, port_range_min: 80, port_range_max: 80},
        {remote_ip_prefix: 0.0.0.0/0, protocol: tcp, port_range_min: 443, port_range_max: 443},
        {remote_ip_prefix: 0.0.0.0/0, protocol: tcp, port_range_min: 4505, port_range_max: 4506},
        {remote_ip_prefix: 0.0.0.0/0, protocol: tcp, port_range_min: 8000, port_range_max: 8000},
        {remote_ip_prefix: 0.0.0.0/0, protocol: icmp}]

outputs:
  Service_Portal_url:
    description: Service Portal url
    value:
      str_replace:
        template: http://service_portal/
        params:
          service_portal: {get_attr: [service_portal_floating_ip, ip]}
  service_portal_group_info:
    description: Group Info
    value: {get_attr: [service_portal_instance, show]}
